name: Tests code and manifests

on:
  pull_request:
    branches:
      - main
      - staging

jobs:
  quality:
    name: "Check code quality ‚ú®"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Dockerfile lint
        uses: hadolint/hadolint-action@v1.5.0

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r test_requirements.txt
          pip install -e .

      - name: Format
        run: black -l 79 --py36 --check helloworld

      - name: Check code complexity
        run: xenon --max-absolute=B --max-modules=B --max-average=A helloworld

      - name: Python lint
        run: pylint --reports=n helloworld

      - name: Check Kubernetes yamls
        uses: stefanprodan/kube-tools@v1
        with:
          helmv3: 3.6.1
          command: |
            echo "Run kubeval"
            helmv3 template ./charts/helloworld | kubeval --strict

  tests:
    name: "Run tests üßê"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r test_requirements.txt
          pip install -e .

      - name: Unit tests
        run: pytest tests

  vulnerabilities-scan:
    name: "Scan for vulnerabilities üîíÔ∏è"
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: user/app:temp

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'user/app:temp'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
