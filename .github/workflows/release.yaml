name: release

on:
  pull_request:
    branches:
      - "main"
      - "staging"
    types:
      - "closed"

jobs:
  release:
    name: "Build & Push Docker image üöÄ"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            smana/helloworld
          tags: |
            # dynamically set the branch name as a prefix
            type=sha,prefix={{branch}}-
            # dynamically set the branch name and sha as a custom tag
            type=raw,value={{branch}}-{{sha}}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  vulnerabilities-scan:
    name: "Scan for vulnerabilities üîíÔ∏è"
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            smana/helloworld
          tags: |
            # dynamically set the branch name as a prefix
            type=sha,prefix={{branch}}-
            # dynamically set the branch name and sha as a custom tag
            type=raw,value={{branch}}-{{sha}}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/smana/helloworld:${{ steps.meta.outputs.tags }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'